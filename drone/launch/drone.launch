<launch>
    <arg name="simulation" default="$(optenv SIM true)" />
    <arg name="challenge4" default="$(optenv CHALLENGE4 true)"/>
    <arg name="docker" default="$(optenv DOCKER_RUN false)"/>

    <param name="simulation" type="bool" value="$(arg simulation)" />
    <param name="challenge4" type="bool" value="$(arg challenge4)" />

    <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time: %r}] [${node} ${function} ${line}]: ${message}" />
    <env name="ROSCONSOLE_CONFIG_FILE" value="$(find drone)/config/rosconsole.conf" />


    <!-- Real Drone-->
    <include file="$(find drone)/launch/bridge_mavros.launch" unless="$(arg simulation)"/>

    <!-- Drone Control -->
    <node pkg="drone_control" type="main.py" name="rob498_drone_07" required="true" output="screen" >
        <rosparam file="$(find drone_control)/config/config_sim.yaml" command="load" if="$(arg simulation)"/>
        <rosparam file="$(find drone_control)/config/config_real.yaml" command="load" unless="$(arg simulation)"/>
    </node>

    <!-- Obstacle Detection -->
    <node pkg="drone_perception" type="main.py" name="detector_obstacles" output="screen">
        <rosparam file="$(find drone_perception)/config/config_sim.yaml" command="load" if="$(arg simulation)"/>
        <rosparam file="$(find drone_perception)/config/config_real.yaml" command="load" unless="$(arg simulation)"/>
    </node>

    <!-- Mapping Node-->
    <node pkg="drone_mapping" type="main.py" name="drone_mapping" output="screen">
        <rosparam file="$(find drone_mapping)/config/config_sim.yaml" command="load" if="$(arg simulation)"/>
        <rosparam file="$(find drone_mapping)/config/config_real.yaml" command="load" unless="$(arg simulation)"/>
    </node>

    <group unless="$(arg docker)">

        <!-- Gui-->
        <include file="$(find drone)/launch/gui.launch" />

        <!-- Simulation-->
        <include file="$(find drone)/launch/mavros_posix_sitl.launch" if="$(arg simulation)" >
            <arg name="challenge4" value="$(arg challenge4)" />
        </include>

    </group>




</launch>
